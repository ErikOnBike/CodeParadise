Class {
	#name : #IonAccordion,
	#superclass : #IonElement,
	#category : #'CodeParadise-WebApplication-Ionic-Elements'
}

{ #category : #api }
IonAccordion >> disabled [

	"If 'true', the accordion cannot be interacted with.
	
	Type: boolean"

	^ self propertyAt: #disabled
]

{ #category : #api }
IonAccordion >> disabled: aBoolean [

	"If 'true', the accordion cannot be interacted with.
	
	Type: boolean"

	self propertyAt: #disabled put: aBoolean
]

{ #category : #api }
IonAccordion >> mode [

	"The mode determines which platform styles to use.
	
	Type: 'ios' | 'md'"

	^ self propertyAt: #mode
]

{ #category : #api }
IonAccordion >> mode: aString [

	"The mode determines which platform styles to use.
	
	Type: 'ios' | 'md'"

	self propertyAt: #mode put: aString
]

{ #category : #api }
IonAccordion >> readonly [

	"If 'true', the accordion cannot be interacted with, but does not alter the opacity.
	
	Type: boolean"

	^ self propertyAt: #readonly
]

{ #category : #api }
IonAccordion >> readonly: aBoolean [

	"If 'true', the accordion cannot be interacted with, but does not alter the opacity.
	
	Type: boolean"

	self propertyAt: #readonly put: aBoolean
]

{ #category : #api }
IonAccordion >> toggleIcon [

	"The toggle icon to use. This icon will be rotated when the accordion is expanded or collapsed.
	
	Type: string"

	^ self propertyAt: #toggleIcon
]

{ #category : #api }
IonAccordion >> toggleIcon: aString [

	"The toggle icon to use. This icon will be rotated when the accordion is expanded or collapsed.
	
	Type: string"

	self propertyAt: #toggleIcon put: aString
]

{ #category : #api }
IonAccordion >> toggleIconSlot [

	"The slot inside of 'ion-item' to place the toggle icon. Defaults to ''end''.
	
	Type: 'start' | 'end'"

	^ self propertyAt: #toggleIconSlot
]

{ #category : #api }
IonAccordion >> toggleIconSlot: aString [

	"The slot inside of 'ion-item' to place the toggle icon. Defaults to ''end''.
	
	Type: 'start' | 'end'"

	self propertyAt: #toggleIconSlot put: aString
]

{ #category : #api }
IonAccordion >> value [

	"The value of the accordion. Defaults to an autogenerated value.
	
	Type: string"

	^ self propertyAt: #value
]

{ #category : #api }
IonAccordion >> value: aString [

	"The value of the accordion. Defaults to an autogenerated value.
	
	Type: string"

	self propertyAt: #value put: aString
]
